{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","tittle","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAAEC,GACnBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAQ,OAAKP,GAAL,mBAAoBO,OAC3CN,EAAc,MAKlB,SACI,uBACGO,KAAK,OACLC,MAAQT,EACRU,SAlBe,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,8BCNnBG,EAAO,uCAAG,WAAOL,GAAP,uBAAAM,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWR,GAF/C,+DAGAS,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,OAAQF,EAAIE,OACZV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAyB,IAAvBJ,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,OAAQV,EAAU,EAAVA,IAItC,OAFAc,QAAQC,IAAI,CAAEN,KAAIC,SAAQV,QAGtB,sBAAKgB,UAAU,2DAAf,UACI,qBAAKC,IAAMjB,EAAMkB,IAAMR,IACvB,kCAAMA,EAAN,WCLCS,EAAU,SAAC,GAAkB,IAAhB1B,EAAe,EAAfA,SAEtB,ECFwB,SAAEA,GAE1B,MAA0BR,mBAAS,CAC/BoB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAwBA,OAlBAC,qBAAW,WAEPzB,EAASL,GACN+B,MAAM,SAAAC,GACHC,YAAY,WAEVJ,EAAS,CACLjB,KAAMoB,EACNL,SAAS,MAGb,UAIT,CAAC3B,IAGG4B,EDxB2BM,CAAclC,GAAlCkB,EAAd,EAAQN,KAAce,EAAtB,EAAsBA,QAEtB,OACI,qCACE,qBAAIJ,UAAU,sDAAd,cAAuEvB,EAAvE,OAEE2B,GAAW,mBAAGJ,UAAU,mCAAb,wBAEb,qBAAKA,UAAU,YAAf,SAEOL,EAAOJ,KAAK,SAAAC,GAAG,OACZ,wBAAC,EAAD,2BAESA,GAFT,IAGIoB,IAAMpB,EAAIC,eEfrBoB,EAAe,WAExB,MAAoC5C,mBAAS,CAAC,eAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAOA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ8C,EAAWvB,KAAK,SAACd,GAAD,OACZ,cAAC,EAAD,CAEGA,SAAWA,GADLA,Y,MCnBjCsC,IAASC,OAAO,cAAC,EAAD,IAAiBC,SAASC,eAAe,W","file":"static/js/main.435efbff.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value )\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault()\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories( category => [inputValue, ...category])\r\n            setInputValue('')\r\n        }\r\n      \r\n    }\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n               type='text'\r\n               value={ inputValue }\r\n               onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=ZFpP2SsrmjRBX5rKeS29pnmNB3a927hw`\r\n    const resp = await fetch( url )\r\n    const { data } = await resp.json()\r\n\r\n    const gifs = data.map( img  => {\r\n        return {\r\n            id: img.id,\r\n            tittle: img.tittle,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, tittle, url }) => {\r\n\r\n    console.log({ id, tittle, url })\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn animate__delay-2s'>\r\n            <img src={ url } alt={ tittle } />\r\n            <p> { tittle} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs( category )\r\n   \r\n    return (\r\n        <>\r\n          <h3 className='animate__animated animate__fadeIn animate__delay-2s'> { category } </h3>\r\n\r\n          { loading && <p className='animate__animated animate__flash'>Loading...</p> }\r\n\r\n          <div className='card-grid'>\r\n             {\r\n                 images.map( img => (\r\n                    <GifGridItem \r\n                     //    img={ img } \r\n                        { ...img }\r\n                        key={ img.id }\r\n                     />\r\n                 ))    \r\n             }\r\n          </div>\r\n        </>\r\n      \r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    // solo llamara a la funcion cuando el componente se ejecute por primera vez\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n          .then( imgs => {\r\n              setTimeout( () => {\r\n\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n\r\n              },3000) \r\n            \r\n          })\r\n\r\n    }, [category]) \r\n\r\n\r\n    return state // { data: [], loading: true }\r\n\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['pokÃ©mon'])\r\n\r\n    // const handleAdd = () => {\r\n    //     // setCategories( [...categories, 'HunterXHunter'] )\r\n    //     setCategories( category => [...category, 'HunterXHunter'])\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( (category) => (\r\n                        <GifGrid \r\n                           key={ category }\r\n                           category={ category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n            \r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />,document.getElementById('root'));\n\n\n"],"sourceRoot":""}